{
    "containing": {
        "name": "containing",
        "body": "containing",
        "description": "",
        "prefix": "~containing"
    },
    "containingall": {
        "name": "containingall",
        "body": "containingall",
        "description": "",
        "prefix": "~containingall"
    },
    "defined": {
        "name": "defined",
        "body": "{% defined \"defined\" false %}\n\t\n\n{% enddefined%} ",
        "description": "Return true if the variable is defined",
        "prefix": "~defined"
    },
    "divisibleby": {
        "name": "divisibleby",
        "body": "{% divisibleby \"divisibleby\" (${num}) %}\n\t\n\n{% enddivisibleby%} ",
        "description": "Check if a variable is divisible by a number",
        "prefix": "~divisibleby"
    },
    "equalto": {
        "name": "equalto",
        "body": "{% equalto \"equalto\" (${other}) %}\n\t\n\n{% endequalto%} ",
        "description": "Check if an object has the same value as another object",
        "prefix": "~equalto"
    },
    "even": {
        "name": "even",
        "body": "{% even \"even\" false %}\n\t\n\n{% endeven%} ",
        "description": "Return true if the value is even",
        "prefix": "~even"
    },
    "iterable": {
        "name": "iterable",
        "body": "{% iterable \"iterable\" false %}\n\t\n\n{% enditerable%} ",
        "description": "Return true if the object is iterable (sequence, dict, etc)",
        "prefix": "~iterable"
    },
    "lower": {
        "name": "lower",
        "body": "{% lower \"lower\" false %}\n\t\n\n{% endlower%} ",
        "description": "Return true if the given string is all lowercased",
        "prefix": "~lower"
    },
    "mapping": {
        "name": "mapping",
        "body": "{% mapping \"mapping\" false %}\n\t\n\n{% endmapping%} ",
        "description": "Return true if the given object is a dict",
        "prefix": "~mapping"
    },
    "none": {
        "name": "none",
        "body": "{% none \"none\" false %}\n\t\n\n{% endnone%} ",
        "description": "Return true if the given object is null / none",
        "prefix": "~none"
    },
    "number": {
        "name": "number",
        "body": "{% number \"number\" false %}\n\t\n\n{% endnumber%} ",
        "description": "Return true if the object is a number",
        "prefix": "~number"
    },
    "odd": {
        "name": "odd",
        "body": "{% odd \"odd\" false %}\n\t\n\n{% endodd%} ",
        "description": "Return true if the object is an odd number",
        "prefix": "~odd"
    },
    "sameas": {
        "name": "sameas",
        "body": "{% sameas \"sameas\" (${other}) %}\n\t\n\n{% endsameas%} ",
        "description": "Return true if variable is pointing at same object as other variable",
        "prefix": "~sameas"
    },
    "sequence": {
        "name": "sequence",
        "body": "{% sequence \"sequence\" false %}\n\t\n\n{% endsequence%} ",
        "description": "Return true if the variable is a sequence. Sequences are variables that are iterable.",
        "prefix": "~sequence"
    },
    "string": {
        "name": "string",
        "body": "{% string \"string\" false %}\n\t\n\n{% endstring%} ",
        "description": "Return true if object is a string",
        "prefix": "~string"
    },
    "string_containing": {
        "name": "string_containing",
        "body": "{% string_containing \"string_containing\" false %}\n\t\n\n{% end_string_containing%} ",
        "description": "Return true if object is a string which contains a specified other string",
        "prefix": "~string_containing"
    },
    "string_startingwith": {
        "name": "string_startingwith",
        "body": "{% string_startingwith \"string_startingwith\" false %}\n\t\n\n{% end_string_startingwith%} ",
        "description": "Return true if object is a string which starts with a specified other string",
        "prefix": "~string_startingwith"
    },
    "truthy": {
        "name": "truthy",
        "body": "{% truthy \"truthy\" false %}\n\t\n\n{% endtruthy%} ",
        "description": "Return true if object is 'truthy'",
        "prefix": "~truthy"
    },
    "undefined": {
        "name": "undefined",
        "body": "{% undefined \"undefined\" false %}\n\t\n\n{% endundefined%} ",
        "description": "Return true if object is undefined",
        "prefix": "~undefined"
    },
    "upper": {
        "name": "upper",
        "body": "{% upper \"upper\" false %}\n\t\n\n{% endupper%} ",
        "description": "Return true if string is all uppercased",
        "prefix": "~upper"
    },
    "within": {
        "name": "within",
        "body": "within",
        "description": "",
        "prefix": "~within"
    }
}