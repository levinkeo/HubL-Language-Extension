{
    "blog_all_posts_url": {
        "name": "blog_all_posts_url",
        "body": "blog_all_posts_url(${selected_blog})",
        "description": "Returns a full URL to the listing page for all blog posts for the specified blog",
        "prefix": "~blog_all_posts_url"
    },
    "blog_author_url": {
        "name": "blog_author_url",
        "body": "blog_author_url(${selected_blog}, ${author_slug})",
        "description": "Returns a full URL to the specified author's listing page for the specified blog",
        "prefix": "~blog_author_url"
    },
    "blog_authors": {
        "name": "blog_authors",
        "body": "blog_authors(${selected_blog}, ${limit})",
        "description": "Returns a sequence of blog author objects for the specified blog, sorted by slug ascending",
        "prefix": "~blog_authors"
    },
    "blog_page_link": {
        "name": "blog_page_link",
        "body": "blog_page_link(${page})",
        "description": "Returns the absolute url of the specified paginated listing page for the current blog",
        "prefix": "~blog_page_link"
    },
    "blog_popular_posts": {
        "name": "blog_popular_posts",
        "body": "blog_popular_posts(${selected_blog}, ${limit}, ${tag_slug})",
        "description": "Returns a sequence of blog post objects for the specified blog, sorted by most popular first",
        "prefix": "~blog_popular_posts"
    },
    "blog_post_archive_url": {
        "name": "blog_post_archive_url",
        "body": "blog_post_archive_url(${selected_blog}, ${year}, ${month}, ${day})",
        "description": "Returns a full URL to the archive listing page for the given date values on the specified blog",
        "prefix": "~blog_post_archive_url"
    },
    "blog_post_by_id": {
        "name": "blog_post_by_id",
        "body": "blog_post_by_id(${blog_post_id})",
        "description": "Returns a blog post by id",
        "prefix": "~blog_post_by_id"
    },
    "blog_recent_author_posts": {
        "name": "blog_recent_author_posts",
        "body": "blog_recent_author_posts(${selected_blog}, ${author_slug}, ${limit})",
        "description": "Returns a sequence of blog post objects for the specified blog, by the specified author, sorted by most recent first",
        "prefix": "~blog_recent_author_posts"
    },
    "blog_recent_posts": {
        "name": "blog_recent_posts",
        "body": "blog_recent_posts(${selected_blog}, ${limit})",
        "description": "Returns a sequence of blog post objects for the specified blog, sorted by most recent first",
        "prefix": "~blog_recent_posts"
    },
    "blog_recent_tag_posts": {
        "name": "blog_recent_tag_posts",
        "body": "blog_recent_tag_posts(${selected_blog}, ${tag_slug}, ${limit})",
        "description": "Returns a sequence of blog post objects for the specified blog, for the specified tag, sorted by most recent first",
        "prefix": "~blog_recent_tag_posts"
    },
    "blog_recent_topic_posts": {
        "name": "blog_recent_topic_posts",
        "body": "blog_recent_topic_posts(${selected_blog}, ${topic_slug}, ${limit})",
        "description": "DEPRECATED -- see 'blog_recent_tag_posts'\nReturns a sequence of blog post objects for the specified blog, for the specified topic, sorted by most recent first",
        "prefix": "~blog_recent_topic_posts"
    },
    "blog_tag_url": {
        "name": "blog_tag_url",
        "body": "blog_tag_url(${selected_blog}, ${tag_slug})",
        "description": "Returns a full URL to the specified tag's listing page for the specified blog",
        "prefix": "~blog_tag_url"
    },
    "blog_tags": {
        "name": "blog_tags",
        "body": "blog_tags(${selected_blog}, ${limit})",
        "description": "Returns a sequence of the 250 most blogged-about tags (based on number of associated blog posts) for the specified blog, sorted by blog post count",
        "prefix": "~blog_tags"
    },
    "blog_topics": {
        "name": "blog_topics",
        "body": "blog_topics(${selected_blog}, ${limit})",
        "description": "DEPRECATED -- see 'blog_tags'\nReturns a sequence of the 250 most blogged-about topics (based on number of associated blog posts) for the specified blog, sorted by blog post count",
        "prefix": "~blog_topics"
    },
    "blog_total_post_count": {
        "name": "blog_total_post_count",
        "body": "blog_total_post_count(${selected_blog})",
        "description": "Returns the total number of published posts in the specified blog",
        "prefix": "~blog_total_post_count"
    },
    "color_variant": {
        "name": "color_variant",
        "body": "color_variant(${base_color}, ${brightness_offset})",
        "description": "Calculates a new hex color value based on a given input string var and multiplier",
        "prefix": "~color_variant"
    },
    "content_search": {
        "name": "content_search",
        "body": "content_search(${content_search_term})",
        "description": "Returns results of searching across all of a portal's content for a specified term",
        "prefix": "~content_search"
    },
    "cta": {
        "name": "cta",
        "body": "cta(${guid}, ${align_opt})",
        "description": "Renders a call to action embed tag",
        "prefix": "~cta"
    },
    "datetimeformat": {
        "name": "datetimeformat",
        "body": "datetimeformat",
        "description": "formats a date to a string",
        "prefix": "~datetimeformat"
    },
    "facebook_messenger_link": {
        "name": "facebook_messenger_link",
        "body": "facebook_messenger_linkfalse",
        "description": "Returns an m.me link for facebook messenger",
        "prefix": "~facebook_messenger_link"
    },
    "follow_me_links": {
        "name": "follow_me_links",
        "body": "follow_me_linksfalse",
        "description": "Returns a list of configured follow me links for the portal",
        "prefix": "~follow_me_links"
    },
    "footer_js": {
        "name": "footer_js",
        "body": "footer_js",
        "description": "Outputs all javascript enqueued for the head as html",
        "prefix": "~footer_js"
    },
    "geo_distance": {
        "name": "geo_distance",
        "body": "geo_distance(${point1}, ${point2_lat}, ${point2_long}, ${units})",
        "description": "Calculates the ellipsoidal 2D distance between two points on Earth",
        "prefix": "~geo_distance"
    },
    "get_public_template_url": {
        "name": "get_public_template_url",
        "body": "get_public_template_url(${path})",
        "description": "Returns URL to specified template by given path",
        "prefix": "~get_public_template_url"
    },
    "get_public_template_url_by_id": {
        "name": "get_public_template_url_by_id",
        "body": "get_public_template_url_by_id(${template_id})",
        "description": "Returns URL to specified template by id",
        "prefix": "~get_public_template_url_by_id"
    },
    "get_theme_style_setting": {
        "name": "get_theme_style_setting",
        "body": "get_theme_style_setting(${dot_notated_full_field_name}, ${unit})",
        "description": "Returns theme overridden settings parameters or settings module parameters by dot notation",
        "prefix": "~get_theme_style_setting"
    },
    "head_css": {
        "name": "head_css",
        "body": "head_css",
        "description": "Outputs all loaded css as html",
        "prefix": "~head_css"
    },
    "head_js": {
        "name": "head_js",
        "body": "head_js",
        "description": "Outputs all javascript enqueued for the head as html",
        "prefix": "~head_js"
    },
    "hubdb_table": {
        "name": "hubdb_table",
        "body": "hubdb_table(${table_id})",
        "description": "Returns information about a table",
        "prefix": "~hubdb_table"
    },
    "hubdb_table_column": {
        "name": "hubdb_table_column",
        "body": "hubdb_table_column(${table_id}, ${column})",
        "description": "Returns column information for specific column in a table",
        "prefix": "~hubdb_table_column"
    },
    "hubdb_table_row": {
        "name": "hubdb_table_row",
        "body": "hubdb_table_row(${table_id}, ${row_id})",
        "description": "Returns a row from a table by id",
        "prefix": "~hubdb_table_row"
    },
    "hubdb_table_rows": {
        "name": "hubdb_table_rows",
        "body": "hubdb_table_rows(${table_id}, ${query})",
        "description": "Returns a sequence of data table rows based on the query",
        "prefix": "~hubdb_table_rows"
    },
    "i18n_getlanguage": {
        "name": "i18n_getlanguage",
        "body": "i18n_getlanguage",
        "description": "Gets the language of the current page. Currently works only within modules.",
        "prefix": "~i18n_getlanguage"
    },
    "i18n_getmessage": {
        "name": "i18n_getmessage",
        "body": "i18n_getmessage(${message_name}, ${substitutions})",
        "description": "Gets the translated message for the language of the rendered page. Currently works only within modules.",
        "prefix": "~i18n_getmessage"
    },
    "include_css": {
        "name": "include_css",
        "body": "include_css(${path})",
        "description": "Generates stylesheet link tag for specified template path",
        "prefix": "~include_css"
    },
    "include_default_custom_css": {
        "name": "include_default_custom_css",
        "body": "include_default_custom_cssfalse",
        "description": "Generates stylesheet link tag for portal default custom css if given bool seq evals to true",
        "prefix": "~include_default_custom_css"
    },
    "include_javascript": {
        "name": "include_javascript",
        "body": "include_javascript",
        "description": "Generates script include tag for specified template path",
        "prefix": "~include_javascript"
    },
    "module_asset_url": {
        "name": "module_asset_url",
        "body": "module_asset_url(${name})",
        "description": "Gets the URL for an asset attached to a module",
        "prefix": "~module_asset_url"
    },
    "page_by_id": {
        "name": "page_by_id",
        "body": "page_by_id(${page_id})",
        "description": "Returns a landing or website page by id",
        "prefix": "~page_by_id"
    },
    "personalization_token": {
        "name": "personalization_token",
        "body": "personalization_token(${expression}, ${default})",
        "description": "Returns the value of a contact or contact related property, or a default.",
        "prefix": "~personalization_token"
    },
    "postal_location": {
        "name": "postal_location",
        "body": "postal_location(${postal_code}, ${country_code})",
        "description": "Returns the lat/lon location of a postal code",
        "prefix": "~postal_location"
    },
    "range": {
        "name": "range",
        "body": "range",
        "description": "<p>Return a list containing an arithmetic progression of integers.</p><p>With one parameter, range will return a list from 0 up to (but not including) the value.  With two parameters, the range will start at the first value and increment by 1 up to (but not including) the second value.  The third parameter specifies the step increment.</p> <p>All values can be negative. Impossible ranges will return an empty list.</p><p>Ranges can generate a maximum of 1000 values.</p>",
        "prefix": "~range"
    },
    "raw_theme_setting": {
        "name": "raw_theme_setting",
        "body": "raw_theme_setting(${dot_notated_full_field_name})",
        "description": "Returns theme overridden settings parameters or default parameters by dot notation",
        "prefix": "~raw_theme_setting"
    },
    "require_css": {
        "name": "require_css",
        "body": "require_css",
        "description": "Loads a css file to be output in the head",
        "prefix": "~require_css"
    },
    "require_default_custom_css": {
        "name": "require_default_custom_css",
        "body": "require_default_custom_cssfalse",
        "description": "Generates stylesheet link tag for portal default custom css if given bool seq evals to true",
        "prefix": "~require_default_custom_css"
    },
    "require_js": {
        "name": "require_js",
        "body": "require_js",
        "description": "Enqueues a js file to be output in the head or footer",
        "prefix": "~require_js"
    },
    "resize_image_url": {
        "name": "resize_image_url",
        "body": "resize_image_url(${url}, ${width}, ${height}, ${length}, ${upscale}, ${upsize})",
        "description": "Rewrites the URL of an image in File Manager to a URL that will resize the image on request",
        "prefix": "~resize_image_url"
    },
    "script_embed": {
        "name": "script_embed",
        "body": "script_embed",
        "description": "Defines an embeddable object which renders differently in the editor vs a live page",
        "prefix": "~script_embed"
    },
    "strtotime": {
        "name": "strtotime",
        "body": "strtotime",
        "description": "converts a string and datetime format into a datetime object",
        "prefix": "~strtotime"
    },
    "super": {
        "name": "super",
        "body": "{% super \"super\" false %}\n\t\n\n{% endsuper%} ",
        "description": "Only usable within blocks, will render the contents of the parent block by calling super.",
        "prefix": "~super"
    },
    "to_local_time": {
        "name": "to_local_time",
        "body": "to_local_time(${date})",
        "description": "Converts a UNIX timestamp to a date in the portal's timezone",
        "prefix": "~to_local_time"
    },
    "today": {
        "name": "today",
        "body": "today",
        "description": "return datetime of beginning of the day",
        "prefix": "~today"
    },
    "truncate": {
        "name": "truncate",
        "body": "truncate",
        "description": "truncates a given string to a specified length",
        "prefix": "~truncate"
    },
    "type": {
        "name": "type",
        "body": "type",
        "description": "",
        "prefix": "~type"
    },
    "unixtimestamp": {
        "name": "unixtimestamp",
        "body": "unixtimestamp",
        "description": "gets the unix timestamp milliseconds value of a datetime",
        "prefix": "~unixtimestamp"
    }
}